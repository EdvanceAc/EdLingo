{
  "name": "edlingo-electron",
  "version": "1.0.0",
  "description": "Modern Language Learning Desktop App",
  "main": "src/main/main.js",
  "scripts": {
    "dev": "concurrently \"vite\" \"wait-on http://localhost:3002 && cross-env NODE_ENV=development electron .\"",
    "build": "vite build && electron-builder",
    "build:netlify": "vite build",
    "preview": "vite preview",
    "electron": "electron .",
    "pack": "electron-builder --dir",
    "dist": "electron-builder",
    "lint": "eslint src --ext .js,.jsx,.ts,.tsx",
    "lint:fix": "eslint src --ext .js,.jsx,.ts,.tsx --fix",
    "test": "vitest",
    "test:coverage": "vitest --coverage",
    "check-health": "node check-service-health.js",
    "analyze-bundle": "npm run build && npx webpack-bundle-analyzer dist/static/js/*.js",
    "setup:admin-db": "node scripts/setup-admin-database.js",
    "cefr:sync": "node manage-cefr-questions.js sync",
    "cefr:fetch": "node manage-cefr-questions.js fetch",
    "cefr:generate": "node manage-cefr-questions.js generate",
    "chrome:debug": "node scripts/setup-browser-mcp.js --chrome-only",
    "browser-mcp:start": "node scripts/setup-browser-mcp.js --mcp-only",
    "browser-mcp:setup": "node scripts/setup-browser-mcp.js --full-setup",
    "browser-mcp:stop": "node scripts/setup-browser-mcp.js --stop",
    "browser-mcp:test": "node scripts/test-browser-mcp.js",
    "supabase-mcp:test": "node scripts/test-supabase-mcp.js",
    "supabase-mcp:health": "echo 'Supabase MCP Server is configured. Use your MCP client (like Cursor) to interact with it.'",
    "supabase-mcp:validate-config": "node -e \"console.log('Checking .mcp.json...'); const fs = require('fs'); const config = JSON.parse(fs.readFileSync('.mcp.json', 'utf8')); console.log('✓ MCP config found:', Object.keys(config.mcpServers)); console.log('✓ Supabase server configured');\"",
    "sequentialthinking-mcp": "npx -y @modelcontextprotocol/server-sequential-thinking",
    "sequentialthinking-mcp:test": "node scripts/test-sequentialthinking-mcp.js",
    "sequentialthinking-mcp:health": "echo 'Sequential Thinking MCP Server is configured. Use your MCP client (like Cursor) to interact with it.'"
  },
  "keywords": [
    "electron",
    "language-learning",
    "ai",
    "education"
  ],
  "author": "EdLingo Team",
  "license": "MIT",
  "devDependencies": {
    "@agentdeskai/browser-tools-mcp": "^1.0.0",
    "@testing-library/jest-dom": "^6.4.0",
    "@testing-library/react": "^14.2.0",
    "@testing-library/user-event": "^14.5.0",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "@vitejs/plugin-react": "^4.2.1",
    "concurrently": "^8.2.2",
    "electron": "^28.1.0",
    "electron-builder": "^24.9.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.34.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "jsdom": "^24.0.0",
    "vite": "^6.3.5",
    "vitest": "^3.2.4",
    "wait-on": "^7.2.0"
  },
  "dependencies": {
    "@google/genai": "^1.8.0",
    "@google/generative-ai": "^0.24.1",
    "@huggingface/transformers": "^3.5.2",
    "@radix-ui/react-dialog": "^1.0.5",
    "@radix-ui/react-dropdown-menu": "^2.0.6",
    "@radix-ui/react-icons": "^1.3.0",
    "@radix-ui/react-select": "^2.0.0",
    "@radix-ui/react-slider": "^1.1.2",
    "@radix-ui/react-switch": "^1.0.3",
    "@radix-ui/react-tabs": "^1.0.4",
    "@radix-ui/react-toast": "^1.1.5",
    "@supabase/supabase-js": "^2.50.3",
    "autoprefixer": "^10.4.21",
    "browser-mcp": "^0.0.0",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.0.0",
    "cross-env": "^7.0.3",
    "dotenv": "^16.6.1",
    "framer-motion": "^10.16.16",
    "googleapis": "^144.0.0",
    "lucide-react": "^0.303.0",
    "mime": "^4.0.7",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.20.1",
    "tailwind-merge": "^2.2.0",
    "tailwindcss": "^3.4.17",
    "tailwindcss-animate": "^1.0.7",
    "ws": "^8.14.2"
  },
  "build": {
    "appId": "com.edlingo.app",
    "productName": "EdLingo",
    "directories": {
      "output": "dist"
    },
    "files": [
      "src/main/**/*",
      "dist/**/*",
      "src/preload/**/*"
    ],
    "mac": {
      "category": "public.app-category.education",
      "target": [
        {
          "target": "dmg",
          "arch": [
            "x64",
            "arm64"
          ]
        }
      ]
    },
    "win": {
      "target": [
        {
          "target": "nsis",
          "arch": [
            "x64"
          ]
        }
      ]
    },
    "linux": {
      "target": [
        {
          "target": "AppImage",
          "arch": [
            "x64"
          ]
        }
      ]
    }
  }
}
